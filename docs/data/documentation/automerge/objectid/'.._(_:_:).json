{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"minimum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}]},{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the half-open range operator ("},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a range of any type"},{"type":"text","text":" "},{"type":"text","text":"that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example creates a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Range<Double>"},{"type":"text","text":" from zero up to, but not including, 5.0."}]},{"type":"codeListing","syntax":null,"code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"type":"text","text":"."}]}],"type":"aside","name":"Precondition"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/objectid\/'.._(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId\/.._(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"kind":"symbol","metadata":{"role":"symbol","title":"..<(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"op","externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:9Automerge8ObjectIdV","extendedModule":"Swift","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId\/-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/ObjectId/-Implementations":{"role":"collectionGroup","title":" Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId\/-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/objectid\/-implementations"},"doc://org.automerge.Automerge-swift/documentation/Automerge/ObjectId/.._(_:_:)":{"role":"symbol","title":"..<(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId\/.._(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/objectid\/'.._(_:_:)"},"doc://org.automerge.Automerge-swift/documentation/Automerge/ObjectId":{"role":"symbol","title":"ObjectId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectId"}],"abstract":[{"type":"text","text":"An objectId uniquely identifies an object in an Automerge document."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/ObjectId","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectId"}],"url":"\/documentation\/automerge\/objectid"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"}}}