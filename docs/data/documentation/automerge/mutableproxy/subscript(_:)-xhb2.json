{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"public"},{"kind":"text","text":" "},{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"internalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy","preciseIdentifier":"s:9Automerge12MutableProxyC","text":"MutableProxy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:9Automerge12MutableProxyCAASMRzSe7ElementRpzSEAERQSi5IndexRtzlE7Wrappedxmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"position","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The position of the element to access. "},{"type":"codeVoice","code":"position"},{"type":"text","text":" "},{"type":"text","text":"must be a valid index of the collection that is not equal to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":" property."}]}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can replace an element of an array by using its"},{"type":"text","text":" "},{"type":"text","text":"subscript."}]},{"type":"codeListing","syntax":null,"code":["var streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","streets[1] = \"Butler\"","print(streets[1])","\/\/ Prints \"Butler\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can subscript a collection with any valid index other than the"},{"type":"text","text":" "},{"type":"text","text":"collection’s end index. The end index refers to the position one"},{"type":"text","text":" "},{"type":"text","text":"past the last element of a collection, so it doesn’t correspond with an"},{"type":"text","text":" "},{"type":"text","text":"element."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/mutableproxy\/subscript(_:)-xhb2"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy\/subscript(_:)-xhb2","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Accesses the element at the specified position."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Wrapped.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Wrapped.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Wrapped.Index"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"subscript(_:)","roleHeading":"Instance Subscript","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MutableProxy","preciseIdentifier":"s:9Automerge12MutableProxyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:9Automerge12MutableProxyCAASMRzSe7ElementRpzSEAERQSi5IndexRtzlE7Wrappedxmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">"}],"symbolKind":"subscript","externalID":"s:9Automerge12MutableProxyCAASMRzSe7ElementRpzSEAERQSi5IndexRtzlEyACyAEGSicip","extendedModule":"Automerge","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy\/MutableCollection-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/MutableProxy/MutableCollection-Implementations":{"role":"collectionGroup","title":"MutableCollection Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy\/MutableCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/mutableproxy\/mutablecollection-implementations"},"doc://org.automerge.Automerge-swift/documentation/Automerge/MutableProxy/subscript(_:)-xhb2":{"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Wrapped.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Wrapped.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Wrapped.Index"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MutableProxy","preciseIdentifier":"s:9Automerge12MutableProxyC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:9Automerge12MutableProxyCAASMRzSe7ElementRpzSEAERQSi5IndexRtzlE7Wrappedxmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Accesses the element at the specified position."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy\/subscript(_:)-xhb2","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/mutableproxy\/subscript(_:)-xhb2"},"doc://org.automerge.Automerge-swift/documentation/Automerge/MutableProxy":{"role":"symbol","title":"MutableProxy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableProxy"}],"abstract":[{"type":"text","text":"A mutable wrapper around your model."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/MutableProxy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableProxy"}],"url":"\/documentation\/automerge\/mutableproxy"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"}}}