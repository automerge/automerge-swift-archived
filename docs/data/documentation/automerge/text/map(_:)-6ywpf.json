{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array containing the transformed elements of this"},{"type":"text","text":" "},{"type":"text","text":"sequence."}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A mapping closure. "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" accepts an"},{"type":"text","text":" "},{"type":"text","text":"element of this sequence as its parameter and returns a transformed"},{"type":"text","text":" "},{"type":"text","text":"value of the same or of a different type."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, "},{"type":"codeVoice","code":"map"},{"type":"text","text":" is used first to convert the names in the array"},{"type":"text","text":" "},{"type":"text","text":"to lowercase strings and then to count their characters."}]},{"type":"codeListing","syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let lowercaseNames = cast.map { $0.lowercased() }","\/\/ 'lowercaseNames' == [\"vivien\", \"marlon\", \"kim\", \"karl\"]","let letterCounts = cast.map { $0.count }","\/\/ 'letterCounts' == [6, 6, 3, 4]"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/text\/map(_:)-6ywpf"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/map(_:)-6ywpf","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"type":"text","text":" "},{"type":"text","text":"over the sequence’s elements."}],"kind":"symbol","metadata":{"role":"symbol","title":"map(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"symbolKind":"method","externalID":"s:SlsE3mapySayqd__Gqd__7ElementQzKXEKlF::SYNTHESIZED::s:9Automerge4TextV","extendedModule":"Swift","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/Collection-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/Text":{"role":"symbol","title":"Text","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Text"}],"abstract":[{"type":"text","text":"A data structure that represents text."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Text"}],"url":"\/documentation\/automerge\/text"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Text/map(_:)-6ywpf":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"type":"text","text":" "},{"type":"text","text":"over the sequence’s elements."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/map(_:)-6ywpf","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/text\/map(_:)-6ywpf"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Text/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/text\/collection-implementations"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"}}}