{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The index of the first element for which "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":". If no elements in the collection satisfy the given predicate,"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns a Boolean value that indicates whether the passed element"},{"type":"text","text":" "},{"type":"text","text":"represents a match."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the predicate to find an element of a type that doesn’t"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" protocol or to find an element that matches"},{"type":"text","text":" "},{"type":"text","text":"particular criteria. Here’s an example that finds a student name that"},{"type":"text","text":" "},{"type":"text","text":"begins with the letter “A”:"}]},{"type":"codeListing","syntax":null,"code":["let students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","if let i = students.firstIndex(where: { $0.hasPrefix(\"A\") }) {","    print(\"\\(students[i]) starts with 'A'!\")","}","\/\/ Prints \"Abena starts with 'A'!\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/text\/firstindex(where:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/firstIndex(where:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the first index in which an element of the collection satisfies"},{"type":"text","text":" "},{"type":"text","text":"the given predicate."}],"kind":"symbol","metadata":{"role":"symbol","title":"firstIndex(where:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:SlsE10firstIndex5where0B0QzSgSb7ElementQzKXE_tKF::SYNTHESIZED::s:9Automerge4TextV","extendedModule":"Swift","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/Collection-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/Text":{"role":"symbol","title":"Text","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Text"}],"abstract":[{"type":"text","text":"A data structure that represents text."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Text"}],"url":"\/documentation\/automerge\/text"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Text/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/text\/collection-implementations"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Text/firstIndex(where:)":{"role":"symbol","title":"firstIndex(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the first index in which an element of the collection satisfies"},{"type":"text","text":" "},{"type":"text","text":"the given predicate."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Text\/firstIndex(where:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/text\/firstindex(where:)"}}}