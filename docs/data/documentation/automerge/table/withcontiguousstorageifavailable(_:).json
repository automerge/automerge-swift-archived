{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"type":"text","text":" "},{"type":"text","text":"must also guarantee that an equivalent buffer of its "},{"type":"codeVoice","code":"SubSequence"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"can be generated by advancing the pointer by the distance to the"},{"type":"text","text":" "},{"type":"text","text":"slice’s "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/table\/withcontiguousstorageifavailable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Call "},{"type":"codeVoice","code":"body(p)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"p"},{"type":"text","text":" is a pointer to the collection’s"},{"type":"text","text":" "},{"type":"text","text":"contiguous storage.  If no such storage exists, it is"},{"type":"text","text":" "},{"type":"text","text":"first created.  If the collection does not support an internal"},{"type":"text","text":" "},{"type":"text","text":"representation in a form of contiguous storage, "},{"type":"codeVoice","code":"body"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"called and "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"kind":"symbol","metadata":{"role":"symbol","title":"withContiguousStorageIfAvailable(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:9Automerge5TableV","extendedModule":"Swift","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table\/Sequence-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/Table/withContiguousStorageIfAvailable(_:)":{"role":"symbol","title":"withContiguousStorageIfAvailable(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Call "},{"type":"codeVoice","code":"body(p)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"p"},{"type":"text","text":" is a pointer to the collection’s"},{"type":"text","text":" "},{"type":"text","text":"contiguous storage.  If no such storage exists, it is"},{"type":"text","text":" "},{"type":"text","text":"first created.  If the collection does not support an internal"},{"type":"text","text":" "},{"type":"text","text":"representation in a form of contiguous storage, "},{"type":"codeVoice","code":"body"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"called and "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table\/withContiguousStorageIfAvailable(_:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/table\/withcontiguousstorageifavailable(_:)"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Table/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/table\/sequence-implementations"},"doc://org.automerge.Automerge-swift/documentation/Automerge/Table":{"role":"symbol","title":"Table","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Table"}],"abstract":[{"type":"text","text":"A data structure that represents a table of rows."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/Table","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Table"}],"url":"\/documentation\/automerge\/table"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"}}}