{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence terminating at the end of the collection with at"},{"type":"text","text":" "},{"type":"text","text":"most "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" elements."}]}]},{"kind":"parameters","parameters":[{"name":"maxLength","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum number of elements to return."},{"type":"text","text":" "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" must be greater than or equal to zero."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the maximum length exceeds the number of elements in the collection,"},{"type":"text","text":" "},{"type":"text","text":"the result contains the entire collection."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.suffix(2))","\/\/ Prints \"[4, 5]\"","print(numbers.suffix(10))","\/\/ Prints \"[1, 2, 3, 4, 5]\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":"."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/history\/suffix(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History\/suffix(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"type":"text","text":"final elements of the collection."}],"kind":"symbol","metadata":{"role":"symbol","title":"suffix(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"symbolKind":"method","externalID":"s:SKsE6suffixy11SubSequenceQzSiF::SYNTHESIZED::s:9Automerge7HistoryV","extendedModule":"Swift","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History","doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History\/BidirectionalCollection-Implementations"]]},"references":{"doc://org.automerge.Automerge-swift/documentation/Automerge/History/suffix(_:)":{"role":"symbol","title":"suffix(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"type":"text","text":"final elements of the collection."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History\/suffix(_:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/history\/suffix(_:)"},"doc://org.automerge.Automerge-swift/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"Automerge helps you build collaborative applications by tracking changes and enabling consistent merging of those changes to your models."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"},"doc://org.automerge.Automerge-swift/documentation/Automerge/History":{"role":"symbol","title":"History","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"History"}],"abstract":[{"type":"text","text":"A struct that wraps a document to represent it as a collection of changes."}],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"History"}],"url":"\/documentation\/automerge\/history"},"doc://org.automerge.Automerge-swift/documentation/Automerge/History/BidirectionalCollection-Implementations":{"role":"collectionGroup","title":"BidirectionalCollection Implementations","abstract":[],"identifier":"doc:\/\/org.automerge.Automerge-swift\/documentation\/Automerge\/History\/BidirectionalCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/automerge\/history\/bidirectionalcollection-implementations"}}}